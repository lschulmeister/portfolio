version: "3"

services:
  catalog:
    image: projectnessie/nessie:0.67.0
    container_name: catalog
    environment:
      - QUARKUS_PROFILE=prod
      - QUARKUS_HTTP_PORT=19120
      - NESSIE_VERSION_STORE_TYPE=ROCKSDB
    volumes:
      - ./data/nessie:/tmp/nessie-rocksdb-store
    ports:
      - 19120:19120

  trino:
    image: trinodb/trino:453
    container_name: trino
    hostname: trino
    environment:
      - TRINO_ENVIRONMENT=production
    ports:
      - 8880:8080
      - 8443:8443
    volumes:
      - ./config/trino/catalog:/etc/trino/catalog

  storage:
    image: minio/minio
    container_name: storage
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=password
      - MINIO_DOMAIN=storage
      - MINIO_REGION_NAME=us-east-1
      - MINIO_REGION=us-east-1
    volumes:
      - ./data/minio:/data
    ports:
      - 9001:9001
      - 9000:9000
    command: ["server", "/data", "--console-address", ":9001"]

  mc:
    depends_on:
      - storage
    image: minio/mc
    container_name: mc
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
      - AWS_DEFAULT_REGION=us-east-1
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc config host add minio http://storage:9000 admin password) do echo '...waiting...' && sleep 1; done;
      /usr/bin/mc mb minio/landing;
      /usr/bin/mc mb minio/lakehouse;
      /usr/bin/mc policy set public minio/landing;
      /usr/bin/mc policy set public minio/lakehouse;
      tail -f /dev/null
      " 

  postgres_lake:
    image: postgres:14
    container_name: postgres_lake
    hostname: postgres_lake
    environment:
      - POSTGRES_USER=hive
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=hive_metastore
    ports:
      - 5431:5432
    volumes:
      - ./data/postgres:/var/lib/postgresql/data

  hive-metastore:
    image: apache/hive:3.1.3
    container_name: hive-metastore
    hostname: hive-metastore
    environment:
      - SERVICE_NAME=metastore
      - DB_DRIVER=postgres
      - SERVICE_OPTS=-Djavax.jdo.option.ConnectionDriverName=org.postgresql.Driver -Djavax.jdo.option.ConnectionURL=jdbc:postgresql://postgres_lake:5432/hive_metastore -Djavax.jdo.option.ConnectionUserName=hive -Djavax.jdo.option.ConnectionPassword=password
      #- IS_RESUME="true"
    ports:
      - 9083:9083
    volumes:
      - ./config/hive/lib/postgresql-42.4.0.jar:/opt/hive/lib/postgresql-42.4.0.jar
      - ./config/hive/lib/aws-java-sdk-bundle-1.11.271.jar:/opt/hive/lib/aws-java-sdk-bundle-1.11.271.jar
      - ./config/hive/lib/hadoop-aws-3.1.0.jar:/opt/hive/lib/hadoop-aws-3.1.0.jar
      - ./config/hive/conf/core-site.xml:/opt/hive/conf/core-site.xml
      - ./config/hive/conf/metastore-site.xml:/opt/hive/conf/metastore-site.xml
      - ./data/hive/data:/opt/hive/data
    depends_on:
      - postgres_lake
